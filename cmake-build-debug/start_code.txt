/*struct BigInt {
    array int32 num;
    int32 n;

    BigInt overload + (BigInt b) {
        array int32 ans;
        int32 len = n;
        if (b.n > n) {
            len = b.n;
        }
        for (int32 i; i < n; ++i) {
            ans[i] = num[i] + b[i];
        }
        BigInt ret;
        ret.n = n;
        ret.num = ans;
        return ret;
    }
}

exec int32 foo() {
    float64 n;
    n = 1;
    get(n);
    BigInt b;
    BigInt a;
    BigInt c = a + b;
}*/

struct Ap {
    array int32 ans;
    construct (int32 i) {
        ans[0] = i;
    }

    int32 bubble(float64 cup) {
        return ans[0];
    }

}

struct Bp {
    array Ap cap;
}

exec int32 af() {
    array Bp cupas;
    string s;
    Ap castro(2);
    cupas[0].cap[0].ans[0] = 1;
    array float64 a;
    int32 i = 1;
    Ap k;
    Ap r;
    r.ans[0] = 1;
    a[0] = a[i] + a[1 + 3 + a[i]] - 3 / 2 + i;
    for (float64 k : a) {

    }
}
